}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==as.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
print(num)
List.hos <- File.values[order(File.values[,Column.ID]),"hospital name"]
List.hos[num]
}}}}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==as.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
print(num)
List.hos <- File.values[order(File.values[,c(Column.ID,"hospital name"]),"hospital name"]
List.hos[num]
}}}}
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==as.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
print(num)
List.hos <- File.values[order(File.values[,c(Column.ID,"hospital name")]),"hospital name"]
List.hos[num]
}}}}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==as.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
print(num)
List.hos <- File.values[order(File.values[,c(Column.ID,File.values$hospital name)]),"hospital name"]
List.hos[num]
}}}}
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==as.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
print(num)
List.hos <- File.values[order(File.values[,c(Column.ID,File.values$hospital name)]),"hospital name"]
List.hos[num]
}}}}
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==as.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
print(num)
List.hos <- File.values[order(File.values[,c(Column.ID,2)]),"hospital name"]
List.hos[num]
}}}}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==as.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
print(num)
List.hos <- File.values[order(File.values[,Column.ID],File.values[,2])]),"hospital name"]
List.hos[num]
}}}}
List.hos <- File.values[order(File.values[,Column.ID],File.values[,2])][,"hospital name"]
List.hos <- File.values[order(File.values[,Column.ID],File.values[,2])][,2]
List.hos <- File.values[order(File.values[,Column.ID],File.values[,2]),2]
List.hos
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==as.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
print(num)
List.hos <- File.values[order(File.values[,Column.ID],File.values[,2]),2]
List.hos[num]
}}}}
rankhospital("TX", "heart failure", 4)
num <-"worst"
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
print(num)
List.hos <- File.values[order(File.values[,Column.ID],File.values[,2]),2]
List.hos[num]
which("hospital name"==colnames(File.values))
File.values[order(File.values[,Column.ID],File.values[,Hos.col]),Hos.col][num]
Hos.col <- which("hospital name"==colnames(File.values))
File.values[order(File.values[,Column.ID],File.values[,Hos.col]),Hos.col][num]
rankhospital("MD", "heart attack", "worst")
state <-"MD"
outcome <- "heart attack"
num <- "worst"
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==as.numeric(num))){
stop("invalid Choice")
}
(grepl("[Bb]est",num)
)
grepl("[Ww]orst",num)
num==as.numeric(num)
num==is.numeric(num)
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==is.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
Hos.col <- which("hospital name"==colnames(File.values))
) )
File.values[order(File.values[,Column.ID],File.values[,Hos.col]),Hos.col][num]
}}}}
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==is.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
Hos.col <- which("hospital name"==colnames(File.values))
) )
File.values[order(File.values[,Column.ID],File.values[,Hos.col]),Hos.col][num]
}}}}
rankhospital <- function(state, outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(!state%in%unique(File.in$State)){
stop("invalid state")
}else{
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==is.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
File.in <- File.in [ File.in$state==state,]
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
Hos.col <- which("hospital name"==colnames(File.values))
File.values[order(File.values[,Column.ID],File.values[,Hos.col]),Hos.col][num]
}}}}
rankhospital("MD", "heart attack", "worst")
split(File.values,File.values$state)
tapply(Hos.by.state,function(x){
order(x[,Column.ID],x[,Hos.col]),Hos.col][num]
})
tapply(Hos.by.state,function(x){
order(x[,Column.ID],x[,Hos.col]),Hos.col][num]
})
tapply(Hos.by.state,function(x){
x[order(x[,Column.ID],x[,Hos.col]),Hos.col][num]
})
Hos.by.state <- split(File.values,File.values$state)
tapply(Hos.by.state,function(x){
x[order(x[,Column.ID],x[,Hos.col]),Hos.col][num]
})
lapply(Hos.by.state,function(x){
x[order(x[,Column.ID],x[,Hos.col]),Hos.col][num]
})
lapply(Hos.by.state,function(x){
Order.state <- x[order(x[,Column.ID],x[,Hos.col]),Hos.col]
}
)
lapply(Hos.by.state,function(x){
Order.state <- x[order(x[,Column.ID],x[,Hos.col]),Hos.col] [num]
}
)
Order.state
out.put<- sapply(Hos.by.state,function(x){
x[order(x[,Column.ID],x[,Hos.col]),Hos.col] [num]
}
)
out.put
Hos.by.state
num
num <- 3
out.put<- sapply(Hos.by.state,function(x){
x[order(x[,Column.ID],x[,Hos.col]),Hos.col] [num]
})
out.put
out.put<- lapply(Hos.by.state,function(x){
x[order(x[,Column.ID],x[,Hos.col]),Hos.col] [num]
})
out.put
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
print nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),Hos.col] [num]
})
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
print (nrow(Hospitals))
x[order(x[,Column.ID],x[,Hos.col]),Hos.col] [num]
})
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
if(grepl("[Ww]orst",num))num <- nrow(File.values)
Hos.col <- which("hospital name"==colnames(File.values))
Hos.by.state <- split(File.values,File.values$state)
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
print (nrow(Hospitals))
x[order(x[,Column.ID],x[,Hos.col]),Hos.col] [num]
})
out.put
out.put<- sapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
print (nrow(Hospitals))
x[order(x[,Column.ID],x[,Hos.col]),Hos.col] [num]
})
out.put
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
print (nrow(Hospitals))
x[order(x[,Column.ID],x[,Hos.col]),Hos.col] [num]
})
out.put
rbind(out.put)
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
if(grepl("[Ww]orst",num))num <- nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),c(Hos.col,"state"] [num]
})
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
if(grepl("[Ww]orst",num))num <- nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),c(Hos.col,"state")] [num]
})
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
if(grepl("[Ww]orst",num))num <- nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),c(Hos.col,"state")] [num]
})
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
if(grepl("[Ww]orst",num))num <- nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),c(Hos.col,"state")] [num,]
})
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
if(grepl("[Ww]orst",num))num <- nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),c(Hos.col,"state")] [num,]
})
Hospitals
colnames(File.in)
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
if(grepl("[Ww]orst",num))num <- nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),c(Hos.col,7)] [num,]
})
out.put
rbind(out.put)
unlist(out.put)
do.call(rbind,out.put)
rankall <- function(outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|num==is.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
Hos.col <- which("hospital name"==colnames(File.values))
Hos.by.state <- split(File.values,File.values$state)
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
if(grepl("[Ww]orst",num))num <- nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),c(Hos.col,7)] [num,]
})
do.call(rbind,out.put)
}}}
> head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
num<-20
num==is.numeric(num)
num
num==is.integer(num)
class(num)
is.integer(num)
is.numeric(num)
rankall <- function(outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|is.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
Hos.col <- which("hospital name"==colnames(File.values))
Hos.by.state <- split(File.values,File.values$state)
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
if(grepl("[Ww]orst",num))num <- nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),c(Hos.col,7)] [num,]
})
do.call(rbind,out.put)
}}}
head(rankall("heart attack", 20), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
do.call(rbind,out.put)
as.data.frame(do.call(rbind,out.put) )
rankall <- function(outcome,num= "best") {
File.in <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
colnames(File.in) <- casefold(gsub("[.]"," ",colnames(File.in)))
pattern <- paste0("^[hH]ospital","(.*)","mortality","(.*)",outcome,"$")
if(sum(grepl(pattern,colnames(File.in)))==0){
stop("invalid outcome")
}else{
if(!(grepl("[Bb]est",num)|grepl("[Ww]orst",num)|is.numeric(num))){
stop("invalid Choice")
}else{
Column.ID <- which(grepl(pattern,colnames(File.in),ignore.case = TRUE))
filter <- suppressWarnings(!is.na(as.numeric(File.in[,Column.ID])))
File.values <- File.in[filter,]
File.values[,Column.ID] <- as.numeric(File.values[,Column.ID])
if(grepl("[Bb]est",num))num <-1
Hos.col <- which("hospital name"==colnames(File.values))
Hos.by.state <- split(File.values,File.values$state)
out.put<- lapply(Hos.by.state,function(x){
Hospitals <- as.data.frame(x)
if(grepl("[Ww]orst",num))num <- nrow(Hospitals)
x[order(x[,Column.ID],x[,Hos.col]),c(Hos.col,7)] [num,]
})
Names.states <- as.data.frame(do.call(rbind,out.put) )
colnames(Names.states) <-c("hospital","state")
Names.states
}}}
submit()
submit()
submit()
